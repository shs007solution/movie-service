# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Running Gradle build!
  displayName: 'Run gradle build'

- script:
    ls -lrt /home/vsts/work/1/s/

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'clean build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    #codeCoverageToolOption: 'JaCoCo'
    #codeCoverageClassFilesDirectories: 'build/classes/main/'
    #codeCoverageGradle5xOrHigher: true
    javaHomeOption: 'JDKVersion'
    #sonarQubeRunAnalysis: false
    #spotBugsAnalysis: false

#- task: PublishCodeCoverageResults@1
  #inputs:
    #codeCoverageTool: 'JaCoCo'
    #summaryFileLocation: '$(System.DefaultWorkingDirectory)/metadata-service/build/reports/jacoco/test/html/index.html'
    #reportDirectory: '$(System.DefaultWorkingDirectory)/metadata-service/build/reports/jacoco/test/html/'


- script:
    ls -lrt /home/vsts/work/1/s/build/libs

- task: Docker@2
  inputs:
    containerRegistry: 'shs007-container-registry-conn'
    repository: 'functional-services-images'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'movie-service-$(Build.BuildId)'